[{"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\reportWebVitals.js":"1","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Main\\Main.js":"3","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\index.js":"4","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\pages\\Newpages.js":"5","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Eraser.js":"6","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Pencil.js":"7","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Photo.js":"8","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Cursor.js":"9"},{"size":362,"mtime":1610716126631,"results":"10","hashOfConfig":"11"},{"size":118,"mtime":1610717690156,"results":"12","hashOfConfig":"11"},{"size":7197,"mtime":1629992128987,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1616223943110,"results":"14","hashOfConfig":"11"},{"size":5920,"mtime":1629730195789,"results":"15","hashOfConfig":"11"},{"size":712,"mtime":1630422294828,"results":"16","hashOfConfig":"11"},{"size":769,"mtime":1630422307813,"results":"17","hashOfConfig":"11"},{"size":542,"mtime":1630508400827,"results":"18","hashOfConfig":"11"},{"size":599,"mtime":1630422303408,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fb3twc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\reportWebVitals.js",[],["41","42"],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Main\\Main.js",["43","44","45","46","47","48","49","50","51","52","53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport './style.css'\r\nimport NewPages from '../Features/pages/Newpages.js'\r\nimport Pencil from '../Features/Options/Pencil';\r\nimport Eraser from '../Features/Options/Eraser';\r\nimport Photo from '../Features/Options/Photo';\r\nimport Cursor from '../Features/Options/Cursor';\r\n\r\nconst Board = () => {\r\n    \r\n    const [drawing, setdrawing] = useState(false)\r\n    const [color, setcolor] = useState('black')\r\n    const [eraserlinewidth, seteraserlinewidht] = useState('10')\r\n    const [linewidth, setlinewidth] = useState(2)\r\n    const [redo_list, set_redo] = useState([])\r\n    const [undo_list, set_undo] = useState([])\r\n    const [flag, setflag] = useState(0)\r\n    const [state, setstate] = useState('pencil')\r\n    const [pencilActive,setPencil] = useState(true)\r\n    const [eraserActive,setEraser] = useState(false)\r\n    const [cursorActive,setCursor] = useState(false)\r\n    const [photoActive,setPhoto] = useState(false)\r\n    let canvas;\r\n    let ctx;\r\n\r\n    useEffect(() => {\r\n\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n\r\n    })\r\n    useEffect(() => {\r\n        window.addEventListener('load', () => {\r\n            \r\n           \r\n            if (JSON.parse(localStorage.getItem(\"Pages\"))) {\r\n                var prevState = JSON.parse(localStorage.getItem(\"Pages\"));\r\n                var imageObj = new Image(1900,1000);\r\n                imageObj.src = prevState[0]\r\n            \r\n                imageObj.onload = function () {\r\n                    ctx.clearRect(0, 0, 1900, 1000);\r\n                    ctx.drawImage(imageObj, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n                }\r\n                set_redo([])\r\n                set_undo([])\r\n                setflag(1)\r\n            }\r\n\r\n        })\r\n        window.addEventListener('resize', () => {\r\n          \r\n            window.location.reload()\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const saveState = (canvas, list, keep_redo) => {\r\n        keep_redo = keep_redo || false;\r\n        if (!keep_redo) {\r\n            set_redo([]);\r\n        }\r\n        if (list) {\r\n            if (list.name == 'undo') {\r\n                set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n            }\r\n            else {\r\n                set_redo(redo_list => [...redo_list, canvas.toDataURL()])\r\n            }\r\n        }\r\n        else {\r\n            set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n        }\r\n        \r\n    }\r\n\r\n    const undo = (canvas, ctx) => {\r\n\r\n        restoreState(canvas, ctx, { name: 'undo', list: undo_list }, { name: 'redo', list: redo_list });\r\n\r\n    }\r\n\r\n\r\n\r\n    const redo = (canvas, ctx) => {\r\n        restoreState(canvas, ctx, { name: 'redo', list: redo_list }, { name: 'undo', list: undo_list });\r\n\r\n    }\r\n\r\n    const restoreState = (canvas, ctx, poping, pushing) => {\r\n\r\n        if (poping.list.length) {\r\n\r\n            saveState(canvas, pushing, true);\r\n\r\n            var restore_state = poping.list.pop();\r\n\r\n            var temp_list = poping.list\r\n            if (poping.name == 'undo') {\r\n                set_undo([...temp_list])\r\n            }\r\n            else {\r\n                set_redo([...temp_list])\r\n            }\r\n            var imageObj1 = new Image();\r\n            imageObj1.src = restore_state\r\n            imageObj1.onload = function () {\r\n                ctx.clearRect(0, 0, 1900, 1000);\r\n                ctx.drawImage(imageObj1, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const draw = (e) => {\r\n\r\n        if (!drawing) return;\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n        ctx.lineWidth = state != 'pencil' ? eraserlinewidth : linewidth;\r\n        ctx.lineCap = 'round'\r\n        ctx.strokeStyle = state != 'pencil' ? 'white' : color\r\n        var left = e.clientX-canvas.offsetLeft\r\n        var top = e.clientY-canvas.offsetTop;\r\n        \r\n        ctx.lineTo(left, top)\r\n        ctx.stroke()\r\n        ctx.beginPath()\r\n        ctx.moveTo(left, top)\r\n\r\n    }\r\n\r\n    const startDrawing = (evt) => {\r\n\r\n        setdrawing(true)\r\n        saveState(canvas);\r\n       \r\n        localStorage.setItem(\"undo_list\", JSON.stringify(undo_list));\r\n        draw(evt)\r\n\r\n    }\r\n    const finishDrawing = () => {\r\n        setdrawing(false)\r\n        ctx.beginPath()\r\n\r\n    }\r\n\r\n    const erase = (e) => {\r\n        setstate('erase')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"pointer\"\r\n\r\n    }\r\n    const pencil = (e) => {\r\n        setstate('pencil')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"crosshair\"\r\n\r\n    }\r\n    \r\n    const chooseColor = (clr) => {\r\n        setcolor(clr)\r\n    }\r\n\r\n    const setline = (e) => {\r\n        setlinewidth(e.target.value)\r\n    }\r\n\r\n    const seteraserline = (e) => {\r\n        seteraserlinewidht(e.target.value)\r\n    }\r\n\r\n    const callundo = () => {\r\n        undo(canvas, ctx);\r\n    }\r\n\r\n    const callredo = () => {\r\n        redo(canvas, ctx);\r\n    }\r\n\r\n    const clearRect = () => {\r\n        ctx.clearRect(0, 0, 1900, 1000)\r\n        set_redo([])\r\n        set_undo([])\r\n\r\n        //localStorage.setItem(\"Canvas\", JSON.stringify([canvas.toDataURL()]));\r\n    }\r\n\r\n    const download = () => {\r\n        var download = document.getElementsByClassName(\"download\")[0];\r\n        var image = canvas.toDataURL(\"image/png\")\r\n            .replace(\"image/png\", \"image/octet-stream\");\r\n        download.setAttribute(\"href\", image);\r\n    }\r\n\r\n    const SettingPencil = () =>{\r\n        setCursor(false)\r\n        setEraser(false)\r\n        setPencil(true)\r\n        setPhoto(false)\r\n        \r\n    }\r\n    const SettingEraser = () =>{\r\n        setCursor(false)\r\n        setEraser(true)\r\n        setPencil(false)\r\n        setPhoto(false)\r\n        \r\n    }\r\n    const SettingPhoto = () =>{\r\n        setCursor(false)\r\n        setEraser(false)\r\n        setPencil(false)\r\n        setPhoto(true)\r\n        \r\n    }\r\n    const SettingCursor = () =>{\r\n        setCursor(true)\r\n        setEraser(false)\r\n        setPencil(false)\r\n        setPhoto(false)\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"Navbar\">\r\n                <NewPages settingundo={set_undo} settingredo={set_redo} drawingStatus={drawing} flag={flag} clear={clearRect}/>\r\n            </div>\r\n            <div className=\"test\">\r\n\r\n                <canvas ref={canvas} height={window.innerHeight * 0.8} width={window.innerWidth * 0.75} className=\"canvas\" onMouseDown={startDrawing} onMouseUp={finishDrawing} onMouseMove={draw}> </canvas>\r\n\r\n            </div>\r\n\r\n            <div className=\"options\">\r\n                <div className=\"Box\">\r\n                    <Pencil isActive={pencilActive} draw={pencil} clickHandle = {SettingPencil}/>\r\n                    <Eraser isActive={eraserActive} erase = {erase}  clickHandle = {SettingEraser}/>\r\n                    <Cursor isActive={cursorActive} clickHandle = {SettingCursor}/>\r\n                    <Photo  isActive={photoActive}  clickHandle = {SettingPhoto}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Board","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\pages\\Newpages.js",["56","57","58","59","60","61","62","63","64","65","66","67"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './style.css'\r\n\r\nconst NewPages = ({ settingundo,\r\n    settingredo,drawingStatus,flag,clear})=>{\r\n   var canvas,ctx\r\n   const [currPage,setcurrPage] = useState(1)\r\n   const [totalpages,settotalpages] =useState(1)\r\n  \r\n\r\n\r\n   // useEffect to check previous storage exits and if then renders it\r\n   useEffect(()=>{\r\n    if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        setcurrPage(1)\r\n        settotalpages( JSON.parse(localStorage.getItem(\"TotalPages\")))\r\n      \r\n      \r\n    }\r\n   },[])\r\n\r\n\r\n   // useEffect to listen to updates on totalpages\r\n   useEffect(()=>{\r\n     localStorage.setItem('TotalPages',JSON.stringify(totalpages))\r\n   },[totalpages])\r\n\r\n\r\n  // This effect shld certain to go to hell becoz iam gonna change this to useref\r\n   useEffect(()=>{\r\n    canvas = document.getElementsByClassName(\"canvas\")[0];\r\n    ctx  = canvas.getContext('2d')\r\n\r\n   })\r\n\r\n   //UseEffect for setting undo , redo lists to [] for every change in page\r\n   useEffect(()=>{\r\n      settingundo([])\r\n      settingredo([])\r\n   },[currPage])\r\n\r\n   // UseEffect to update the page for every change\r\n   useEffect(()=>{\r\n   \r\n     if(!drawingStatus && flag){\r\n      \r\n       if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        console.log('currpage',currPage)\r\n        var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n        //console.log(storedpages[0])\r\n    \r\n        storedpages[currPage-1]=canvas.toDataURL()\r\n    \r\n        localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n       }\r\n       else{\r\n        localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n       }\r\n            \r\n     }\r\n    \r\n   \r\n   },[drawingStatus])\r\n  \r\n   // fnx to save the page \r\n   const savepage = () => {\r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    storedpages[currPage-1]=canvas.toDataURL()\r\n    localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n   }\r\n\r\n  // fnx to drawpage according to page number passed\r\n   const drawpage = (page) => {   \r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    var imageObj2 = new Image();\r\n    imageObj2.src = storedpages[page-1]\r\n    imageObj2.onload = function() {\r\n\r\n        ctx.clearRect(0, 0, 1900, 1000);\r\n        ctx.drawImage(imageObj2,0,0,1900, 1000, 0, 0, 1900, 1000);\r\n  \r\n     }\r\n\r\n   }\r\n\r\n   //fnx that excutes on prev page button clicks\r\n   const PrevPage = () => {\r\n    if(currPage==1)return;\r\n    savepage()\r\n    setcurrPage(currPage-1) \r\n    drawpage(currPage-1)\r\n  \r\n  }\r\n   \r\n  //fnx that excutes on next page button clicks\r\n   const NextPage = () => {\r\n       if (currPage==totalpages){\r\n           if(totalpages==1){\r\n           \r\n            localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n           }\r\n          else{\r\n            savepage()\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            \r\n          }\r\n       }\r\n       else{\r\n           savepage()\r\n           setcurrPage(currPage+1)\r\n          \r\n            drawpage(currPage+1)\r\n      \r\n       }\r\n\r\n   }\r\n\r\n   // fnx to del the page \r\n   const DeletePage = () => {\r\n     console.log(currPage)\r\n     if(currPage==1){\r\n      NextPage()\r\n      setcurrPage(currPage=>currPage-1)\r\n      settotalpages(totalpages=>totalpages-1)\r\n      const [firstelement,...rest]= JSON.parse(localStorage.getItem(\"Pages\"))\r\n      // console.log(firstelement,rest)\r\n      localStorage.setItem(\"Pages\", JSON.stringify(rest))\r\n     }\r\n     else{\r\n       const TempPageNumber = currPage;\r\n       const storedpages = JSON.parse(localStorage.getItem(\"Pages\"));\r\n       PrevPage()\r\n       settotalpages(totalpages=>totalpages-1)\r\n       storedpages.pop(TempPageNumber-1)\r\n       localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n\r\n\r\n\r\n     }\r\n   }\r\n\r\n    return(\r\n      \r\n        <div  className='Nav'>\r\n             \r\n                <div className=\"top\">\r\n                    <div className=\"cnt\">\r\n                      <button className='iconsbutton1' onClick={PrevPage}>\r\n                          <i className={`arrow ${currPage==1?'leftInactive':'left'}`}></i>\r\n                      </button>\r\n                      <div class=\"content\" >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"36\" viewBox=\"0 0 46 36\" >\r\n                          <g fill=\"none\" >\r\n                            <rect width=\"38\" height=\"22\" x=\"1\" y=\"7\" stroke=\"#3C4043\" stroke-width=\"2\" ></rect>\r\n                            <path fill=\"#5F6368\" d=\"M8,4 L6,4 L6,0 L46,0 L46,24 L42,24 L42,22 L44,22 L44,2 L8,2 L8,4 Z\" ></path>\r\n                            <polygon fill=\"#80868B\" points=\"26 33 23 36 20 33\" ></polygon>\r\n                          </g>\r\n                        </svg>\r\n                        <div className=\"text\">{currPage}/{totalpages}</div>\r\n\r\n                      </div>\r\n                      <button   className='iconsbutton2' onClick={NextPage}>\r\n                          <i className=\"arrow right\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <button>Undo</button>\r\n                    <button>Redo</button>\r\n                     |\r\n                     &nbsp;\r\n                    <button>Zoom</button>\r\n                    &nbsp;\r\n                     |\r\n                     &nbsp;\r\n                    <button>Set Background</button>\r\n                    &nbsp;\r\n                     |\r\n                    &nbsp;\r\n                    <button onClick={clear}>Clear Frame</button>\r\n\r\n                </div>\r\n            \r\n        </div>\r\n       \r\n      \r\n    )\r\n} \r\n \r\n\r\n\r\nexport default NewPages","C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Eraser.js",["68"],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Pencil.js",["69"],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Photo.js",["70"],"C:\\Users\\hp\\Desktop\\My Projs\\react projects\\whiteboard\\src\\Components\\Features\\Options\\Cursor.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":18,"nodeType":"78","endLine":28,"endColumn":62},{"ruleId":"76","severity":1,"message":"79","line":29,"column":15,"nodeType":"80","endLine":29,"endColumn":38},{"ruleId":"76","severity":1,"message":"81","line":56,"column":8,"nodeType":"82","endLine":56,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":65,"column":27,"nodeType":"86","messageId":"87","endLine":65,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":100,"column":29,"nodeType":"86","messageId":"87","endLine":100,"endColumn":31},{"ruleId":"84","severity":1,"message":"88","line":121,"column":31,"nodeType":"86","messageId":"87","endLine":121,"endColumn":33},{"ruleId":"84","severity":1,"message":"88","line":123,"column":33,"nodeType":"86","messageId":"87","endLine":123,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":160,"column":11,"nodeType":"91","messageId":"92","endLine":160,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":164,"column":11,"nodeType":"91","messageId":"92","endLine":164,"endColumn":18},{"ruleId":"89","severity":1,"message":"94","line":168,"column":11,"nodeType":"91","messageId":"92","endLine":168,"endColumn":24},{"ruleId":"89","severity":1,"message":"95","line":172,"column":11,"nodeType":"91","messageId":"92","endLine":172,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":176,"column":11,"nodeType":"91","messageId":"92","endLine":176,"endColumn":19},{"ruleId":"89","severity":1,"message":"97","line":188,"column":11,"nodeType":"91","messageId":"92","endLine":188,"endColumn":19},{"ruleId":"89","severity":1,"message":"98","line":1,"column":28,"nodeType":"91","messageId":"92","endLine":1,"endColumn":34},{"ruleId":"76","severity":1,"message":"77","line":31,"column":14,"nodeType":"78","endLine":31,"endColumn":58},{"ruleId":"76","severity":1,"message":"79","line":32,"column":12,"nodeType":"80","endLine":32,"endColumn":35},{"ruleId":"76","severity":1,"message":"99","line":40,"column":6,"nodeType":"82","endLine":40,"endColumn":16,"suggestions":"100"},{"ruleId":"76","severity":1,"message":"101","line":63,"column":6,"nodeType":"82","endLine":63,"endColumn":21,"suggestions":"102"},{"ruleId":"84","severity":1,"message":"85","line":88,"column":16,"nodeType":"86","messageId":"87","endLine":88,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":97,"column":20,"nodeType":"86","messageId":"87","endLine":97,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":98,"column":25,"nodeType":"86","messageId":"87","endLine":98,"endColumn":27},{"ruleId":"89","severity":1,"message":"103","line":124,"column":10,"nodeType":"91","messageId":"92","endLine":124,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":126,"column":17,"nodeType":"86","messageId":"87","endLine":126,"endColumn":19},{"ruleId":"89","severity":1,"message":"104","line":130,"column":14,"nodeType":"91","messageId":"92","endLine":130,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":154,"column":58,"nodeType":"86","messageId":"87","endLine":154,"endColumn":60},{"ruleId":"89","severity":1,"message":"105","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"105","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"106","line":5,"column":11,"nodeType":"91","messageId":"92","endLine":5,"endColumn":19},{"ruleId":"89","severity":1,"message":"105","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","Assignments to the 'canvas' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'ctx'. Either include it or remove the dependency array.","ArrayExpression",["109"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'chooseColor' is assigned a value but never used.","Identifier","unusedVar","'setline' is assigned a value but never used.","'seteraserline' is assigned a value but never used.","'callundo' is assigned a value but never used.","'callredo' is assigned a value but never used.","'download' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'settingredo' and 'settingundo'. Either include them or remove the dependency array. If 'settingundo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["110"],"React Hook useEffect has missing dependencies: 'canvas', 'currPage', and 'flag'. Either include them or remove the dependency array.",["111"],"'DeletePage' is assigned a value but never used.","'firstelement' is assigned a value but never used.","'useState' is defined but never used.","'isActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [ctx]",{"range":"118","text":"119"},"Update the dependencies array to be: [currPage, settingredo, settingundo]",{"range":"120","text":"121"},"Update the dependencies array to be: [canvas, currPage, drawingStatus, flag]",{"range":"122","text":"123"},[1939,1941],"[ctx]",[1089,1099],"[currPage, settingredo, settingundo]",[1711,1726],"[canvas, currPage, drawingStatus, flag]"]