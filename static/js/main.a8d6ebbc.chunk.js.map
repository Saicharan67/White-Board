{"version":3,"sources":["Components/Features/pages/Newpages.js","Components/Features/Options/Pencil.js","Components/Features/Options/Eraser.js","Components/Features/Options/Photo.js","Components/Features/Options/Cursor.js","Components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["NewPages","canvas","ctx","settingundo","settingredo","drawingStatus","undo","redo","flag","clear","useState","currPage","setcurrPage","totalpages","settotalpages","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementsByClassName","getContext","storedpages","toDataURL","savepage","drawpage","page","imageObj2","Image","src","onload","clearRect","drawImage","PrevPage","NextPage","className","map","onClick","style","height","class","xmlns","width","viewBox","fill","x","y","stroke","stroke-width","d","points","Pencil","props","color","isActive","clickHandle","draw","Eraser","erase","Photo","Cursor","Board","drawing","setdrawing","eraserlinewidth","linewidth","redo_list","set_redo","undo_list","set_undo","setflag","state","setstate","pencilActive","setPencil","eraserActive","setEraser","cursorActive","setCursor","photoActive","setPhoto","window","addEventListener","prevState","imageObj","location","reload","callredo","saveState","list","keep_redo","name","restoreState","poping","pushing","length","restore_state","pop","temp_list","imageObj1","e","lineWidth","lineCap","strokeStyle","left","clientX","offsetLeft","top","clientY","offsetTop","lineTo","beginPath","moveTo","ref","innerHeight","innerWidth","onMouseDown","evt","onMouseUp","onMouseMove","cursor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8d6ebbc.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './style.css'\r\n\r\nconst NewPages = ({ settingundo,\r\n    settingredo,undo,redo,drawingStatus,flag,clear})=>{\r\n   var canvas,ctx\r\n   const [currPage,setcurrPage] = useState(1)\r\n   const [totalpages,settotalpages] =useState(1)\r\n  \r\n\r\n\r\n   // useEffect to check previous storage exits and if then renders it\r\n   useEffect(()=>{\r\n    if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        setcurrPage(1)\r\n        settotalpages( JSON.parse(localStorage.getItem(\"TotalPages\")))\r\n      \r\n      \r\n    }\r\n   },[])\r\n\r\n\r\n   // useEffect to listen to updates on totalpages\r\n   useEffect(()=>{\r\n     localStorage.setItem('TotalPages',JSON.stringify(totalpages))\r\n   },[totalpages])\r\n\r\n\r\n  // This effect shld certain to go to hell becoz iam gonna change this to useref\r\n   useEffect(()=>{\r\n    canvas = document.getElementsByClassName(\"canvas\")[0];\r\n    ctx  = canvas.getContext('2d')\r\n\r\n   })\r\n\r\n   //UseEffect for setting undo , redo lists to [] for every change in page\r\n   useEffect(()=>{\r\n      settingundo([])\r\n      settingredo([])\r\n   },[currPage])\r\n\r\n   // UseEffect to update the page for every change\r\n   useEffect(()=>{\r\n   \r\n     if(!drawingStatus && flag){\r\n      \r\n       if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        \r\n        var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n  \r\n        storedpages[currPage-1]=canvas.toDataURL()\r\n    \r\n        localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n       }\r\n       else{\r\n        localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n       }\r\n            \r\n     }\r\n    \r\n   \r\n   },[drawingStatus])\r\n  \r\n   // fnx to save the page \r\n   const savepage = () => {\r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    storedpages[currPage-1]=canvas.toDataURL()\r\n    localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n   }\r\n\r\n  // fnx to drawpage according to page number passed\r\n   const drawpage = (page) => {   \r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    var imageObj2 = new Image();\r\n    imageObj2.src = storedpages[page-1]\r\n    imageObj2.onload = function() {\r\n\r\n        ctx.clearRect(0, 0, 1900, 1000);\r\n        ctx.drawImage(imageObj2,0,0,1900, 1000, 0, 0, 1900, 1000);\r\n  \r\n     }\r\n\r\n   }\r\n\r\n   //fnx that excutes on prev page button clicks\r\n   const PrevPage = () => {\r\n    if(currPage==1)return;\r\n    savepage()\r\n    setcurrPage(currPage-1) \r\n    drawpage(currPage-1)\r\n  \r\n  }\r\n   \r\n  //fnx that excutes on next page button clicks\r\n   const NextPage = () => {\r\n       if (currPage==totalpages){\r\n           if(totalpages==1){\r\n           \r\n            localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n           }\r\n          else{\r\n            savepage()\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            \r\n          }\r\n       }\r\n       else{\r\n           savepage()\r\n           setcurrPage(currPage+1)\r\n           drawpage(currPage+1)\r\n      \r\n       }\r\n\r\n   }\r\n\r\n   // fnx to del the page \r\n   const DeletePage = () => {\r\n     console.log(currPage)\r\n     if(currPage==1){\r\n      NextPage()\r\n      setcurrPage(currPage=>currPage-1)\r\n      settotalpages(totalpages=>totalpages-1)\r\n      const [firstelement,...rest]= JSON.parse(localStorage.getItem(\"Pages\"))\r\n      // console.log(firstelement,rest)\r\n      localStorage.setItem(\"Pages\", JSON.stringify(rest))\r\n     }\r\n     else{\r\n       const TempPageNumber = currPage;\r\n       const storedpages = JSON.parse(localStorage.getItem(\"Pages\"));\r\n       PrevPage()\r\n       settotalpages(totalpages=>totalpages-1)\r\n       storedpages.pop(TempPageNumber-1)\r\n       localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n\r\n\r\n\r\n     }\r\n   }\r\n   const expandTop = ()=>{\r\n     document.getElementsByClassName(\"HiddenTop\")[0].style.height= \"30%\";\r\n   }\r\n   const collapsTop =  ()=> {\r\n    document.getElementsByClassName(\"HiddenTop\")[0].style.height= \"0%\";\r\n   }\r\n    return(\r\n      \r\n        <div  className='Nav'>\r\n                <div className=\"HiddenTop\">\r\n                  <div className=\"hiddenparent\">\r\n                      { localStorage.getItem(\"Pages\")? JSON.parse(localStorage.getItem(\"Pages\")).map((page)=>{\r\n                        return (\r\n                        <div className=\"hiddenPages\">\r\n\r\n                            \r\n\r\n                        </div>)\r\n                      }):''}\r\n                  </div>\r\n                  <div className=\"closebtn\" onClick={collapsTop}>\r\n                        <div className=\"closebtnchild\"></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"top\">\r\n                    <div className=\"cnt\">\r\n                      <button className='iconsbutton1' onClick={PrevPage}>\r\n                          <i className={`arrow ${currPage==1?'leftInactive':'left'}`}></i>\r\n                      </button>\r\n                      <div class=\"content\"  onClick={expandTop}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"36\" viewBox=\"0 0 46 36\" >\r\n                          <g fill=\"none\" >\r\n                            <rect width=\"38\" height=\"22\" x=\"1\" y=\"7\" stroke=\"#3C4043\" stroke-width=\"2\" ></rect>\r\n                            <path fill=\"#5F6368\" d=\"M8,4 L6,4 L6,0 L46,0 L46,24 L42,24 L42,22 L44,22 L44,2 L8,2 L8,4 Z\" ></path>\r\n                            <polygon fill=\"#80868B\" points=\"26 33 23 36 20 33\" ></polygon>\r\n                          </g>\r\n                        </svg>\r\n                        <div className=\"text\">{currPage}/{totalpages}</div>\r\n\r\n                      </div>\r\n                      <button   className='iconsbutton2' onClick={NextPage}>\r\n                          <i className=\"arrow right\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <button >Undo</button>\r\n                    <button >Redo</button>\r\n                     |\r\n                     &nbsp;\r\n                    <button>Zoom</button>\r\n                    &nbsp;\r\n                     |\r\n                     &nbsp;\r\n                    <button>Set Background</button>\r\n                    &nbsp;\r\n                     |\r\n                    &nbsp;\r\n                    <button onClick={clear}>Clear Frame</button>\r\n\r\n                </div>\r\n            \r\n        </div>\r\n       \r\n      \r\n    )\r\n} \r\n \r\n// implement clear function in the newpage itself by clearing the page in local storage too \r\n\r\nexport default NewPages","import React, { useState } from 'react'\r\n\r\nimport './style.css'\r\nconst Pencil = (props) => {\r\n    \r\n    var color = props.isActive?'#fff':'#3d4042'\r\n    \r\n    return (\r\n\r\n            <button className={`${props.isActive?'isActive':'btn'}`} onClick={()=>{props.clickHandle();props.draw()}} >\r\n                   <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\"  viewBox=\"0 0 24 24\"><path fill=\"none\"  d=\"M24 0v24H0V0h24z\"></path><path fill={color} d=\"M3 17.25V21h3.74l7.54-7.53-3.75-3.75L3 17.25zM18.37 3.3l2.34 2.33c.39.39.4 1.03.01 1.42l-5.37 5.36-3.76-3.76 2.53-2.53-.73-.73-5.66 5.66-1.4-1.4 6.37-6.36c.39-.39 1.04-.38 1.42.01l1.42 1.41 1.42-1.41c.38-.39 1.02-.39 1.41 0z\"></path></svg>\r\n            </button>\r\n\r\n    )\r\n}\r\n\r\nexport default Pencil\r\n","import React, { useState } from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Eraser = (props) => {\r\n        \r\n        var color = props.isActive?'#fff':'#3d4042'\r\n\r\n    return (\r\n\r\n            <button className={`${props.isActive?'isActive':'btn'}`}   onClick={()=>{props.clickHandle();props.erase()}}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" ><path fill=\"none\" d=\"M24 0v24H0V0h24z\" ></path><path fill={color} d=\"M17.26 18l-2 2h6.7v-2h-4.7zm4.15-6.67L13.04 20H4.73l-2.15-2.14c-.78-.78-.78-2.03 0-2.82L13.62 3.58c.78-.77 2.06-.77 2.84 0l4.95 4.93c.79.78.79 2.04 0 2.82z\" ></path></svg>\r\n            </button>\r\n\r\n    )\r\n}\r\n\r\nexport default Eraser\r\n\r\n","import React from 'react'\r\n\r\nimport './style.css'\r\nconst Photo = (props) => {\r\n    const isActive = true\r\n\r\n    return (\r\n\r\n            <button className=\"btn\" >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" ><path fill=\"#3d4042\" d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\" ></path><path d=\"M0 0h24v24H0z\" fill=\"none\" ></path></svg>\r\n            </button>\r\n\r\n    )\r\n}\r\n\r\nexport default Photo\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Cursor = (props) => {\r\n       \r\n    var color = props.isActive?'#fff':'#3d4042'\r\n\r\n    return (\r\n\r\n            <button className={`${props.isActive?'isActive':'btn'}`}  onClick={()=>{props.clickHandle()}} >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" ><path fill=\"none\" d=\"M24 0v24H0V0h24z\" ></path><polygon fill={color} points=\"12.926 12 17.5 20 15 21.5 10.405 13.595 6 18 6 2 19 12\" ></polygon></svg>\r\n            </button>\r\n\r\n    )\r\n}\r\n\r\nexport default Cursor\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport NewPages from '../Features/pages/Newpages.js'\r\nimport Pencil from '../Features/Options/Pencil';\r\nimport Eraser from '../Features/Options/Eraser';\r\nimport Photo from '../Features/Options/Photo';\r\nimport Cursor from '../Features/Options/Cursor';\r\nimport './style.css'\r\n\r\n\r\nconst Board = () => {\r\n    \r\n    const [drawing, setdrawing] = useState(false)\r\n    const [color, setcolor] = useState('black')\r\n    const [eraserlinewidth, seteraserlinewidht] = useState('10')\r\n    const [linewidth, setlinewidth] = useState(2)\r\n    const [redo_list, set_redo] = useState([])\r\n    const [undo_list, set_undo] = useState([])\r\n    const [flag, setflag] = useState(0)\r\n    const [state, setstate] = useState('pencil')\r\n    const [pencilActive,setPencil] = useState(true)\r\n    const [eraserActive,setEraser] = useState(false)\r\n    const [cursorActive,setCursor] = useState(false)\r\n    const [photoActive,setPhoto] = useState(false)\r\n    let canvas;\r\n    let ctx;\r\n\r\n    useEffect(() => {\r\n\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n        \r\n\r\n    })\r\n    useEffect(() => {\r\n        window.addEventListener('load', () => {\r\n            \r\n           \r\n            if (JSON.parse(localStorage.getItem(\"Pages\"))) {\r\n                var prevState = JSON.parse(localStorage.getItem(\"Pages\"));\r\n                var imageObj = new Image(1900,1000);\r\n                imageObj.src = prevState[0]\r\n            \r\n                imageObj.onload = function () {\r\n                    ctx.clearRect(0, 0, 1900, 1000);\r\n                    ctx.drawImage(imageObj, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n                }\r\n                set_redo([])\r\n                set_undo([])\r\n                setflag(1)\r\n            }\r\n\r\n        })\r\n        window.addEventListener('resize', () => {\r\n          \r\n            window.location.reload()\r\n        })\r\n        // window.addEventListener('keydown',(event)=>{\r\n\r\n        //     if(event.ctrlKey && event.key==='z'){\r\n        //         callundo()\r\n        //         console.log(undo_list)\r\n        //     }\r\n\r\n\r\n        // })\r\n    }, [])\r\n\r\n    const callundo = () => {\r\n        undo(canvas, ctx);\r\n    }\r\n\r\n    const callredo = () => {\r\n        redo(canvas, ctx);\r\n    }\r\n    const saveState = (canvas, list, keep_redo) => {\r\n        \r\n        keep_redo = keep_redo || false;\r\n        if (!keep_redo) {\r\n            set_redo([]);\r\n        }\r\n        if (list) {\r\n            if (list.name == 'undo') {\r\n                set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n            }\r\n            else {\r\n                set_redo(redo_list => [...redo_list, canvas.toDataURL()])\r\n            }\r\n        }\r\n        else {\r\n            set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n        }\r\n        \r\n    }\r\n\r\n    const undo = (canvas, ctx) => {\r\n\r\n        restoreState(canvas, ctx, { name: 'undo', list: undo_list }, { name: 'redo', list: redo_list });\r\n\r\n    }\r\n\r\n\r\n\r\n    const redo = (canvas, ctx) => {\r\n        restoreState(canvas, ctx, { name: 'redo', list: redo_list }, { name: 'undo', list: undo_list });\r\n\r\n    }\r\n\r\n    const restoreState = (canvas, ctx, poping, pushing) => {\r\n\r\n        if (poping.list.length) {\r\n\r\n            saveState(canvas, pushing, true);\r\n\r\n            var restore_state = poping.list.pop();\r\n\r\n            var temp_list = poping.list\r\n            if (poping.name == 'undo') {\r\n                set_undo([...temp_list])\r\n            }\r\n            else {\r\n                set_redo([...temp_list])\r\n            }\r\n            var imageObj1 = new Image();\r\n            imageObj1.src = restore_state\r\n            imageObj1.onload = function () {\r\n                ctx.clearRect(0, 0, 1900, 1000);\r\n                ctx.drawImage(imageObj1, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const draw = (e) => {\r\n\r\n        if (!drawing) return;\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n        ctx.lineWidth = state != 'pencil' ? eraserlinewidth : linewidth;\r\n        ctx.lineCap = 'round'\r\n        ctx.strokeStyle = state != 'pencil' ? 'white' : color\r\n        var left = e.clientX-canvas.offsetLeft\r\n        var top = e.clientY-canvas.offsetTop;\r\n        \r\n        ctx.lineTo(left, top)\r\n        ctx.stroke()\r\n        ctx.beginPath()\r\n        ctx.moveTo(left, top)\r\n\r\n    }\r\n\r\n    const startDrawing = (evt) => {\r\n\r\n        setdrawing(true)\r\n        saveState(canvas);\r\n       \r\n        localStorage.setItem(\"undo_list\", JSON.stringify(undo_list));\r\n        draw(evt)\r\n\r\n    }\r\n    const finishDrawing = () => {\r\n        setdrawing(false)\r\n        ctx.beginPath()\r\n\r\n    }\r\n\r\n    const erase = (e) => {\r\n        setstate('erase')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"pointer\"\r\n\r\n    }\r\n    const pencil = (e) => {\r\n        setstate('pencil')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"crosshair\"\r\n\r\n    }\r\n    \r\n    \r\n\r\n \r\n\r\n    const clearRect = () => {\r\n        ctx.clearRect(0, 0, 1900, 1000)\r\n        set_redo([])\r\n        set_undo([])\r\n\r\n    }\r\n\r\n    const download = () => {\r\n        var download = document.getElementsByClassName(\"download\")[0];\r\n        var image = canvas.toDataURL(\"image/png\")\r\n            .replace(\"image/png\", \"image/octet-stream\");\r\n        download.setAttribute(\"href\", image);\r\n    }\r\n\r\n    const SettingPencil = () =>{\r\n        setCursor(false)\r\n        setEraser(false)\r\n        setPencil(true)\r\n        setPhoto(false)\r\n        \r\n    }\r\n    const SettingEraser = () =>{\r\n        setCursor(false)\r\n        setEraser(true)\r\n        setPencil(false)\r\n        setPhoto(false)\r\n        \r\n    }\r\n    const SettingPhoto = () =>{\r\n        setCursor(false)\r\n        setEraser(false)\r\n        setPencil(false)\r\n        setPhoto(true)\r\n        \r\n    }\r\n    const SettingCursor = () =>{\r\n        setCursor(true)\r\n        setEraser(false)\r\n        setPencil(false)\r\n        setPhoto(false)\r\n        \r\n    }\r\n   \r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"Navbar\">\r\n                <NewPages settingundo={set_undo} undo={callredo} redo={callredo}settingredo={set_redo} drawingStatus={drawing} flag={flag} clear={clearRect}/>\r\n            </div>\r\n            <div className=\"test\">\r\n\r\n                <canvas ref={canvas} height={window.innerHeight * 0.8} width={window.innerWidth * 0.75} className=\"canvas\" onMouseDown={startDrawing} onMouseUp={finishDrawing} onMouseMove={draw}> </canvas>\r\n\r\n            </div>\r\n\r\n            <div className=\"options\">\r\n                <div className=\"Box\">\r\n                    <Pencil isActive={pencilActive} draw={pencil} clickHandle = {SettingPencil}/>\r\n                    <Eraser isActive={eraserActive} erase = {erase}  clickHandle = {SettingEraser}/>\r\n                    <Cursor isActive={cursorActive} clickHandle = {SettingCursor}/>\r\n                    <Photo  isActive={photoActive}  clickHandle = {SettingPhoto}/>\r\n                    <div className=\"InvincibleBox\">\r\n                        <div className=\"brushes\">\r\n\r\n                        </div>\r\n                        <div className=\"colors\">\r\n                            <button></button>\r\n                            <button></button>\r\n                            <button></button>\r\n                            <button></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Board","\r\nimport Board from  './Components/Main/Main.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <Board/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}