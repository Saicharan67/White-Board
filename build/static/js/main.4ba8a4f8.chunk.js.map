{"version":3,"sources":["Components/Features/pages/Newpages.js","Components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["NewPages","canvas","ctx","settingundo","settingredo","drawingStatus","flag","useState","currPage","setcurrPage","totalpages","settotalpages","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","document","getElementsByClassName","getContext","console","log","storedpages","toDataURL","savepage","drawpage","page","imageObj2","Image","src","onload","clearRect","drawImage","PrevPage","NextPage","className","id","onClick","rest","TempPageNumber","pop","Board","drawing","setdrawing","color","eraserlinewidth","linewidth","redo_list","set_redo","undo_list","set_undo","setflag","state","setstate","window","addEventListener","length","prevState","imageObj","location","reload","event","key","ctrlKey","undo","saveState","list","keep_redo","name","restoreState","poping","pushing","restore_state","temp_list","imageObj1","draw","e","lineWidth","lineCap","strokeStyle","left","clientX","offsetLeft","top","clientY","offsetTop","lineTo","stroke","beginPath","moveTo","style","cursor","download","type","image","replace","setAttribute","mouseX","mouseY","startingX","font","keyCode","measureText","width","fillText","redo","xPlace","yPlace","rect","once","arc","Math","PI","ref","height","innerHeight","innerWidth","onMouseDown","evt","onMouseUp","onMouseMove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ba8a4f8.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './style.css'\r\n\r\nconst NewPages = ({ settingundo,\r\n    settingredo,drawingStatus,flag})=>{\r\n   var canvas,ctx\r\n   const [currPage,setcurrPage] = useState(1)\r\n   const [totalpages,settotalpages] =useState(1)\r\n  \r\n\r\n\r\n   // useEffect to check previous storage exits and if then renders it\r\n   useEffect(()=>{\r\n    if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        setcurrPage(1)\r\n        settotalpages( JSON.parse(localStorage.getItem(\"TotalPages\")))\r\n      \r\n      \r\n    }\r\n   },[])\r\n\r\n\r\n   // useEffect to listen to updates on totalpages\r\n   useEffect(()=>{\r\n     localStorage.setItem('TotalPages',JSON.stringify(totalpages))\r\n   },[totalpages])\r\n\r\n\r\n  // This effect shld certain to go to hell becoz iam gonna change this to useref\r\n   useEffect(()=>{\r\n    canvas = document.getElementsByClassName(\"canvas\")[0];\r\n    ctx  = canvas.getContext('2d')\r\n\r\n   })\r\n\r\n   //UseEffect for setting undo , redo lists to [] for every change in page\r\n   useEffect(()=>{\r\n      settingundo([])\r\n      settingredo([])\r\n   },[currPage])\r\n\r\n   // UseEffect to update the page for every change\r\n   useEffect(()=>{\r\n   \r\n     if(!drawingStatus && flag){\r\n       console.log(flag)\r\n       if(JSON.parse(localStorage.getItem(\"Pages\"))){\r\n        console.log('currpage',currPage)\r\n        var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n        //console.log(storedpages[0])\r\n    \r\n        storedpages[currPage-1]=canvas.toDataURL()\r\n    \r\n        localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n       }\r\n       else{\r\n        localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n       }\r\n            \r\n     }\r\n    \r\n   \r\n   },[drawingStatus])\r\n  \r\n   // fnx to save the page \r\n   const savepage = () => {\r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    storedpages[currPage-1]=canvas.toDataURL()\r\n    localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n   }\r\n\r\n  // fnx to drawpage according to page number passed\r\n   const drawpage = (page) => {   \r\n    var storedpages = JSON.parse(localStorage.getItem(\"Pages\"))\r\n    var imageObj2 = new Image();\r\n    imageObj2.src = storedpages[page-1]\r\n    imageObj2.onload = function() {\r\n\r\n        ctx.clearRect(0, 0, 1900, 1000);\r\n        ctx.drawImage(imageObj2,0,0,1900, 1000, 0, 0, 1900, 1000);\r\n  \r\n     }\r\n\r\n   }\r\n\r\n   //fnx that excutes on prev page button clicks\r\n   const PrevPage = () => {\r\n    if(currPage==1)return;\r\n    savepage()\r\n    setcurrPage(currPage-1) \r\n    drawpage(currPage-1)\r\n  \r\n  }\r\n   \r\n  //fnx that excutes on next page button clicks\r\n   const NextPage = () => {\r\n       if (currPage==totalpages){\r\n           if(totalpages==1){\r\n           \r\n            localStorage.setItem(\"Pages\", JSON.stringify([canvas.toDataURL()]));\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n           }\r\n          else{\r\n            savepage()\r\n            ctx.clearRect(0, 0, 1900, 1000);\r\n            setcurrPage(currPage+1)\r\n            settotalpages(totalpages+1)\r\n            \r\n          }\r\n       }\r\n       else{\r\n           savepage()\r\n           setcurrPage(currPage+1)\r\n          \r\n            drawpage(currPage+1)\r\n      \r\n       }\r\n\r\n   }\r\n\r\n   // fnx to del the page \r\n   const DeletePage = () => {\r\n     console.log(currPage)\r\n     if(currPage==1){\r\n      NextPage()\r\n      setcurrPage(currPage=>currPage-1)\r\n      settotalpages(totalpages=>totalpages-1)\r\n      const [firstelement,...rest]= JSON.parse(localStorage.getItem(\"Pages\"))\r\n      // console.log(firstelement,rest)\r\n      localStorage.setItem(\"Pages\", JSON.stringify(rest))\r\n     }\r\n     else{\r\n       const TempPageNumber = currPage;\r\n       const storedpages = JSON.parse(localStorage.getItem(\"Pages\"));\r\n       PrevPage()\r\n       settotalpages(totalpages=>totalpages-1)\r\n       storedpages.pop(TempPageNumber-1)\r\n       localStorage.setItem(\"Pages\", JSON.stringify(storedpages))\r\n\r\n\r\n\r\n     }\r\n   }\r\n\r\n    return(\r\n      \r\n        <div  className='page'>\r\n             <div  className='navbar'>\r\n                <button id=\"newpagebuttons\" className='iconsbutton1' onClick={PrevPage}><img className=\"icons prev\" src=\"./images/previous.png\"/>  </button>\r\n                <div className='pagebox'>\r\n                    {currPage}/{totalpages}\r\n                </div>\r\n                <button id=\"newpagebuttons\"  className='iconsbutton1' onClick={NextPage}><img className=\"icons next\" src=\"./images/next.png\"/></button>\r\n             </div>\r\n            <button id=\"newpagebuttons\" className='iconsbutton1' onClick={DeletePage}><img className=\"icons delete\" src=\"./images/delete.png\"/>  </button>\r\n       </div>\r\n       \r\n      \r\n    )\r\n} \r\n \r\n\r\n\r\nexport default NewPages","import React, { useEffect, useState } from 'react';\r\nimport './style.css'\r\nimport NewPages from '../Features/pages/Newpages.js'\r\n\r\nconst Board = () => {\r\n    const Colors = ['black', 'blue', 'red', 'green', 'yellow']\r\n    const [drawing, setdrawing] = useState(false)\r\n    const [color, setcolor] = useState('black')\r\n    const [eraserlinewidth, seteraserlinewidht] = useState('10')\r\n    const [linewidth, setlinewidth] = useState(2)\r\n    const [redo_list, set_redo] = useState([])\r\n    const [undo_list, set_undo] = useState([])\r\n    const [flag, setflag] = useState(0)\r\n    const [state, setstate] = useState('pencil')\r\n    let canvas;\r\n    let ctx;\r\n\r\n    useEffect(() => {\r\n\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n\r\n    })\r\n    useEffect(() => {\r\n        window.addEventListener('load', () => {\r\n            console.log(JSON.parse(localStorage.getItem(\"Pages\")) ? JSON.parse(localStorage.getItem(\"Pages\")).length : 'notcame')\r\n           \r\n            if (JSON.parse(localStorage.getItem(\"Pages\"))) {\r\n                var prevState = JSON.parse(localStorage.getItem(\"Pages\"));\r\n                var imageObj = new Image();\r\n                imageObj.src = prevState[0]\r\n                console.log(prevState[0])\r\n                imageObj.onload = function () {\r\n                    ctx.clearRect(0, 0, 1900, 1000);\r\n                    ctx.drawImage(imageObj, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n                }\r\n                set_redo([])\r\n                set_undo([])\r\n                setflag(1)\r\n            }\r\n\r\n        })\r\n        window.addEventListener('resize', () => {\r\n          \r\n            window.location.reload()\r\n        })\r\n        window.addEventListener('keydown', function (event) {\r\n            if (event.key == 'z' && event.ctrlKey) {\r\n                console.log('came')\r\n                undo(canvas, ctx)\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const saveState = (canvas, list, keep_redo) => {\r\n        keep_redo = keep_redo || false;\r\n        if (!keep_redo) {\r\n            set_redo([]);\r\n        }\r\n        if (list) {\r\n            if (list.name == 'undo') {\r\n                set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n            }\r\n            else {\r\n                set_redo(redo_list => [...redo_list, canvas.toDataURL()])\r\n            }\r\n        }\r\n        else {\r\n            set_undo(undo_list => [...undo_list, canvas.toDataURL()])\r\n        }\r\n        console.log(undo_list.length, redo_list.length)\r\n    }\r\n\r\n    const undo = (canvas, ctx) => {\r\n\r\n        restoreState(canvas, ctx, { name: 'undo', list: undo_list }, { name: 'redo', list: redo_list });\r\n\r\n    }\r\n\r\n\r\n\r\n    const redo = (canvas, ctx) => {\r\n        restoreState(canvas, ctx, { name: 'redo', list: redo_list }, { name: 'undo', list: undo_list });\r\n\r\n    }\r\n\r\n    const restoreState = (canvas, ctx, poping, pushing) => {\r\n\r\n        if (poping.list.length) {\r\n\r\n            saveState(canvas, pushing, true);\r\n\r\n            var restore_state = poping.list.pop();\r\n\r\n            var temp_list = poping.list\r\n            if (poping.name == 'undo') {\r\n                set_undo([...temp_list])\r\n            }\r\n            else {\r\n                set_redo([...temp_list])\r\n            }\r\n            var imageObj1 = new Image();\r\n            imageObj1.src = restore_state\r\n            imageObj1.onload = function () {\r\n                ctx.clearRect(0, 0, 1900, 1000);\r\n                ctx.drawImage(imageObj1, 0, 0, 1900, 1000, 0, 0, 1900, 1000);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const draw = (e) => {\r\n\r\n        if (!drawing) return;\r\n        canvas = document.getElementsByClassName(\"canvas\")[0];\r\n        ctx = canvas.getContext('2d')\r\n        ctx.lineWidth = state != 'pencil' ? eraserlinewidth : linewidth;\r\n        ctx.lineCap = 'round'\r\n        ctx.strokeStyle = state != 'pencil' ? 'white' : color\r\n        var left = e.clientX-canvas.offsetLeft\r\n        var top = e.clientY-canvas.offsetTop;\r\n        \r\n        ctx.lineTo(left, top)\r\n        ctx.stroke()\r\n        ctx.beginPath()\r\n        ctx.moveTo(left, top)\r\n\r\n    }\r\n\r\n    const startDrawing = (evt) => {\r\n\r\n        setdrawing(true)\r\n        saveState(canvas);\r\n        console.log(canvas)\r\n        localStorage.setItem(\"undo_list\", JSON.stringify(undo_list));\r\n        draw(evt)\r\n\r\n    }\r\n    const finishDrawing = () => {\r\n        setdrawing(false)\r\n        ctx.beginPath()\r\n\r\n    }\r\n\r\n    const erase = (e) => {\r\n        setstate('erase')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"pointer\"\r\n\r\n    }\r\n    const pencil = (e) => {\r\n        setstate('pencil')\r\n        document.getElementsByClassName(\"canvas\")[0].style.cursor = \"crosshair\"\r\n\r\n    }\r\n    const rectangle = () => {\r\n        setstate('pencil')\r\n        let xPlace = 100;\r\n        let yPlace = 130;\r\n        document.getElementsByClassName('canvas')[0].addEventListener('click', (event) => {\r\n            xPlace = event.clientX-canvas.offsetLeft\r\n            yPlace = event.clientY-canvas.offsetTop\r\n            ctx.beginPath();\r\n            ctx.lineWidth = linewidth;\r\n            ctx.strokeStyle = color;\r\n            ctx.rect(xPlace, yPlace, 300, 150);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n\r\n\r\n        }, { once: true })\r\n    }\r\n    const square = () => {\r\n        setstate('pencil')\r\n        let xPlace = 100;\r\n        let yPlace = 130;\r\n        document.getElementsByClassName('canvas')[0].addEventListener('click', (event) => {\r\n            xPlace = event.clientX-canvas.offsetLeft\r\n            yPlace = event.clientY-canvas.offsetTop\r\n            ctx.beginPath();\r\n            ctx.lineWidth = linewidth;\r\n            ctx.strokeStyle = color;\r\n            ctx.rect(xPlace, yPlace, 200, 200);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n\r\n\r\n        }, { once: true })\r\n\r\n    }\r\n    const Circle = () => {\r\n        setstate('pencil')\r\n        let xPlace = 100;\r\n        let yPlace = 130;\r\n        document.getElementsByClassName('canvas')[0].addEventListener('click', (event) => {\r\n            xPlace = event.clientX-canvas.offsetLeft\r\n            yPlace = event.clientY-canvas.offsetTop\r\n\r\n            ctx.beginPath();\r\n            ctx.lineWidth = linewidth;\r\n            ctx.strokeStyle = color;\r\n            ctx.arc(xPlace, yPlace, 200, 0, 2 * Math.PI, false);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n\r\n        }, { once: true })\r\n\r\n    }\r\n    const insertText = () => {\r\n        setdrawing(false)\r\n        var mouseX = 0\r\n        var mouseY = 0;\r\n        var startingX = 0;\r\n\r\n        document.addEventListener(\"click\", function (e) {\r\n            mouseX = e.clientX;\r\n            startingX = mouseX\r\n            mouseY = e.clientY;\r\n\r\n            return false\r\n\r\n        }, false)\r\n\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            ctx.font = \"30px Times New Roman\"\r\n            if (e.key == \"Enter\") {\r\n                mouseX = startingX;\r\n                mouseY += 20\r\n            }\r\n            else if (e.keyCode === 8) {\r\n                undo(canvas, ctx)\r\n                mouseX -= ctx.measureText(e.key).width;\r\n            } else {\r\n                ctx.fillText(e.key, mouseX, mouseY)\r\n                saveState(canvas)\r\n                mouseX += ctx.measureText(e.key).width;\r\n            }\r\n\r\n        }, false)\r\n    }\r\n    const chooseColor = (clr) => {\r\n        setcolor(clr)\r\n    }\r\n\r\n    const setline = (e) => {\r\n        setlinewidth(e.target.value)\r\n    }\r\n\r\n    const seteraserline = (e) => {\r\n        seteraserlinewidht(e.target.value)\r\n    }\r\n\r\n    const callundo = () => {\r\n        undo(canvas, ctx);\r\n    }\r\n\r\n    const callredo = () => {\r\n        redo(canvas, ctx);\r\n    }\r\n\r\n    const clearRect = () => {\r\n        ctx.clearRect(0, 0, 1900, 1000)\r\n        set_redo([])\r\n        set_undo([])\r\n\r\n        //localStorage.setItem(\"Canvas\", JSON.stringify([canvas.toDataURL()]));\r\n    }\r\n\r\n    const download = () => {\r\n        var download = document.getElementsByClassName(\"download\")[0];\r\n        var image = canvas.toDataURL(\"image/png\")\r\n            .replace(\"image/png\", \"image/octet-stream\");\r\n        download.setAttribute(\"href\", image);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='root'>\r\n            <div className=\"options\">\r\n                <div className='sidebar'>\r\n                    <button className='iconsbutton' onClick={erase}>\r\n                    <img className=\"icons eraser\" src=\"./images/eraser.png\"/>  \r\n                    </button>\r\n                    <a className=\"download\" download=\"canvas.png\">\r\n                        <button className='iconsbutton' type=\"button\" onClick={download}> <img className=\"icons download\" src=\"./images/download.png\"/>   </button>\r\n                    </a>\r\n                    <button className='iconsbutton' id=\"pencil\" onClick={pencil}>\r\n                    <img className =\" icons pencil\" src=\"./images/pen.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' id=\"undo\" onClick={insertText}>\r\n                    <img className=\"icons text\" src=\"./images/text.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' id=\"undo\" onClick={callundo}>\r\n                    <img className=\"icons undo\" src=\"./images/undo-arrow.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' id=\"redo\" onClick={callredo}>\r\n                    <img className=\"icons redo\" src=\"./images/redo-arrow.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' id=\"redo\" onClick={clearRect}>\r\n                    <img className=\"icons undo\" src=\"./images/clear.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' onClick={rectangle}>\r\n                    <img className=\"icons rectangle\" src=\"./images/rounded-rectangle.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' onClick={square}>\r\n                    <img className=\"icons square\" src=\"./images/rounded-square.png\"/> \r\n                    </button>\r\n                    <button className='iconsbutton' onClick={Circle}>\r\n                    <img className=\"icons circle\" src=\"./images/circle.png\"/> \r\n                    </button>\r\n                </div>\r\n               \r\n                <div className=\"penciloptions\">\r\n                   \r\n                </div>\r\n            </div>\r\n            <NewPages settingundo={set_undo} settingredo={set_redo} drawingStatus={drawing} flag={flag} />\r\n            <div className=\"test\">\r\n\r\n                <canvas ref={canvas} height={window.innerHeight * 0.85} width={window.innerWidth * 0.85} className=\"canvas\" onMouseDown={startDrawing} onMouseUp={finishDrawing} onMouseMove={draw}> </canvas>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Board","\nimport Board from  './Components/Main/Main.js'\n\nfunction App() {\n  return (\n    <Board/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}